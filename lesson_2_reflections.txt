Q: What happens when you initialize a repository? Why do you need to do it?
A: При инициализации папки добавляется скрытаф папка .git, в которой хранится информация о новом репозитории и версионности файлов.

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?
A: Стэджинг область не является частью репозитория или рабочей ппки. Это виртуальная область, куда добавляются файлы для дальнейшего их коммита.

Q: How can you use the staging area to make sure you have one commit per logical change?
A: Можно добавлять в стэджтнг область те файлы, которые касаются текущего логического изменения и коммитать их. После - то же самое для файлов следующего логически отдельного коммита

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A: Бранчи помогают в случаях, когда нужна сделать отдельную версию продукта.
Это может быть некая экспериментальная фича или добавление некоей функциональности.
В этом случае можно не трогая рабочую версию (master) работать над добавлением новой функциональности или исправлением ошибок.

Q: How do the diagrams help you visualize the branch structure?
A: Диаграммы помогают не запутаться в отношениях бранчей и фич/коммитов в бранчах.

Q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A: В результате мержа два бранча сливаются в один, например, в мастер.
Все коммиты мержащихся бранчей сохраняются и располагаются в результирующем бранче в порядке добавления.
Для более точного понимания состояния бранчей и коммитов в них полезно нарисовать диаграмму бранчей

Q: What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
A: Автоматический мерж простой, но не всегда может разрешить конфликты при одновременной работе нескольких человек с одним файлом.
Но он быстр. Ручной мерж медленный, но помогает при сложных случаях.
 